# THIS FILE WAS GENERATED BY `xtp-python-bindgen`. DO NOT EDIT.

from __future__ import annotations
from enum import Enum  # noqa: F401
from typing import Optional, List  # noqa: F401
from datetime import datetime  # noqa: F401
from dataclasses import dataclass  # noqa: F401
from dataclass_wizard import JSONWizard, skip_if_field, IS  # noqa: F401
from dataclass_wizard.type_def import JSONObject
from base64 import b64encode, b64decode


@dataclass
class WaveArgs(JSONWizard):
    # frequency in hertz
    freq_hz: float

    # an array of input numbers
    inputs: List[float]

    # true if the left channel audio should be generated, false if right
    isLeftChannel: bool

    # number between 0..1 representing the current phase
    phase: float

    # the raw sample number if you would like to compute the pitch and phase yourself
    sample: int

    # the raw sample rate if you would like to compute the pitch and phase yourself
    sampleRate: float

    @classmethod
    def _pre_from_dict(cls, o: JSONObject) -> JSONObject:
        return o

    def _pre_dict(self):
        return
