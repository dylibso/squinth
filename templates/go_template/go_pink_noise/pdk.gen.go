// THIS FILE WAS GENERATED BY `xtp-go-bindgen`. DO NOT EDIT.
package main

import (
	pdk "github.com/extism/go-pdk"
)

//export wave
func _Wave() int32 {
	return 0
}

// Arguments to the user defined wave function
type WaveArgs struct {
	// frequency in hertz
	FreqHz float32 `json:"freq_hz"`
	// an array of input numbers
	Inputs []float32 `json:"inputs"`
	// true if the left channel audio should be generated, false if right
	IsLeftChannel bool `json:"isLeftChannel"`
	// number between 0..1 representing the current phase
	Phase float32 `json:"phase"`
	// the raw sample number if you would like to compute the pitch and phase yourself
	Sample int64 `json:"sample"`
	// the raw sample rate if you would like to compute the pitch and phase yourself
	SampleRate float32 `json:"sampleRate"`
}

//export batch_compute_wf
func _BatchComputeWf() int32 {
	// pdk.Log(pdk.LogDebug, "BatchComputeWf: calling implementation function")
	_, err := BatchComputeWf()
	if err != nil {
		pdk.SetError(err)
		return -1
	}

	// pdk.Log(pdk.LogDebug, "BatchComputeWf: setting bytes output")
	// pdk.Output((*[4]byte)(unsafe.Pointer(&output))[:])

	// pdk.Log(pdk.LogDebug, "BatchComputeWf: returning")
	return 0
}
